services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      migrator:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - effective_mobile_task

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - effective_mobile_task
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  migrator:
    image: migrate/migrate
    container_name: migrator
    depends_on:
      postgres:
        condition: service_healthy
    env_file: 
      - .env
    networks:
      - effective_mobile_task
    volumes:
      - ./migrations/:/database/migrations
    command:
      [
        "-path",
        "/database/migrations/",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]

volumes:
  postgres_data:

networks:
  effective_mobile_task: